# Project
Standard: c++20
ColumnLimit: 120

# Indentation
AccessModifierOffset: -4
BitFieldColonSpacing: Both
ContinuationIndentWidth: 4
IndentCaseLabels: true
IndentCaseBlocks: false
IndentExternBlock: Indent
IndentPPDirectives: None
IndentRequires: true
IndentWidth: 4
IndentWrappedFunctionNames: true
TabWidth: 4
UseTab: Never

# Alignment
AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: Consecutive
AlignConsecutiveBitFields: Consecutive
AlignConsecutiveDeclarations: Consecutive
AlignConsecutiveMacros: Consecutive
AlignEscapedNewlines: Left
AlignOperands: Align
AlignTrailingComments: true

# Allow
AllowAllArgumentsOnNextLine: false
AllowAllConstructorInitializersOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: Never
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false
AllowShortLambdasOnASingleLine: All

# Break
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: Yes
BreakBeforeConceptDeclarations: true
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: AfterColon
BreakBeforeBinaryOperators: None
BreakInheritanceList: AfterColon
BreakStringLiterals: true

# Initializers & arguments
BinPackArguments: false
BinPackParameters: false
ConstructorInitializerAllOnOneLineOrOnePerLine: true
ConstructorInitializerIndentWidth: 0
Cpp11BracedListStyle: true

# Braces
BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: true
  AfterClass: true
  AfterControlStatement: Always
  AfterEnum: true
  AfterFunction: true
  AfterNamespace: true
  AfterStruct: true
  AfterUnion: true
  AfterExternBlock: true
  BeforeCatch: true
  BeforeElse: true
  BeforeLambdaBody: true
  BeforeWhile: false
  IndentBraces: false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true

# Namespaces
CompactNamespaces: false
FixNamespaceComments: true
NamespaceIndentation: None

# Derive
DeriveLineEnding: false
DerivePointerAlignment: false

# Empty lines
EmptyLineBeforeAccessModifier: Always
KeepEmptyLinesAtTheStartOfBlocks: true
MaxEmptyLinesToKeep: 2

# Sorting
IncludeBlocks: Regroup
IncludeCategories:
  - Priority: 100
    Regex: "^<Q(.+)>$"
  - Priority: 101
    Regex: "^<RockPaperScissorsProtocol/entity(.+)>$"
  - Priority: 102
    Regex: "^<RockPaperScissorsProtocol/interface(.+)>$"
  - Priority: 103
    Regex: "^<RockPaperScissorsProtocol(.+)>$"
  - Priority: 104
    Regex: "^<infrastructure/widget(.+)>$"
  - Priority: 105
    Regex: "^<infrastructure/storage(.+)>$"
  - Priority: 106
    Regex: "^<infrastructure/client(.+)>$"
  - Priority: 107
    Regex: "^<infrastructure/util(.+)>$"
  - Priority: 108
    Regex: "^<infrastructure(.+)>$"
  - Priority: 109
    Regex: "^<domain/entity/(.+)>$"
  - Priority: 110
    Regex: "^<domain/interface/(.+)>$"
  - Priority: 111
    Regex: "^<domain/model/(.+)>$"
  - Priority: 112
    Regex: "^<domain/usecase/(.+)>$"
  - Priority: 113
    Regex: "^<domain/handler/(.+)>$"
  - Priority: 114
    Regex: "^<domain/util/(.+)>$"
  - Priority: 115
    Regex: "^<domain(.+)>$"
  - Priority: 116
    Regex: "^<gtest(.+)>$"
  - Priority: 0
    Regex: "^<(.+)>$"
  - Priority: 1000
    Regex: '^\"(.+)\"$'
SortIncludes: true
SortUsingDeclarations: true

# Penalties
PenaltyBreakAssignment: 1000
PenaltyBreakBeforeFirstCallParameter: 1000
PenaltyBreakComment: 200
PenaltyBreakFirstLessLess: 100
PenaltyBreakString: 1
PenaltyBreakTemplateDeclaration: 0
PenaltyExcessCharacter: 5
PenaltyIndentedWhitespace: 1
PenaltyReturnTypeOnItsOwnLine: 500

# Pointer alignment
PointerAlignment: Left

# Comments
ReflowComments: false

# Spaces
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Line endings
UseCRLF: false

# Qualifiers (const, volatile, static, etc)
QualifierAlignment: Custom
QualifierOrder: ["static", "inline", "constexpr", "const", "volatile", "type"]
